package club.futurer.community.business.curiosity.model.entity;

import java.util.ArrayList;
import java.util.List;

public class QuestioningVoteSummarizingExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table questioning_vote_summarizing
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table questioning_vote_summarizing
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table questioning_vote_summarizing
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_vote_summarizing
     *
     * @mbg.generated
     */
    public QuestioningVoteSummarizingExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_vote_summarizing
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_vote_summarizing
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_vote_summarizing
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_vote_summarizing
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_vote_summarizing
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_vote_summarizing
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_vote_summarizing
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_vote_summarizing
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_vote_summarizing
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_vote_summarizing
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table questioning_vote_summarizing
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andQuestioningIdIsNull() {
            addCriterion("questioning_id is null");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdIsNotNull() {
            addCriterion("questioning_id is not null");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdEqualTo(Long value) {
            addCriterion("questioning_id =", value, "questioningId");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdNotEqualTo(Long value) {
            addCriterion("questioning_id <>", value, "questioningId");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdGreaterThan(Long value) {
            addCriterion("questioning_id >", value, "questioningId");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdGreaterThanOrEqualTo(Long value) {
            addCriterion("questioning_id >=", value, "questioningId");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdLessThan(Long value) {
            addCriterion("questioning_id <", value, "questioningId");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdLessThanOrEqualTo(Long value) {
            addCriterion("questioning_id <=", value, "questioningId");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdIn(List<Long> values) {
            addCriterion("questioning_id in", values, "questioningId");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdNotIn(List<Long> values) {
            addCriterion("questioning_id not in", values, "questioningId");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdBetween(Long value1, Long value2) {
            addCriterion("questioning_id between", value1, value2, "questioningId");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdNotBetween(Long value1, Long value2) {
            addCriterion("questioning_id not between", value1, value2, "questioningId");
            return (Criteria) this;
        }

        public Criteria andPercent191IsNull() {
            addCriterion("percent191 is null");
            return (Criteria) this;
        }

        public Criteria andPercent191IsNotNull() {
            addCriterion("percent191 is not null");
            return (Criteria) this;
        }

        public Criteria andPercent191EqualTo(Integer value) {
            addCriterion("percent191 =", value, "percent191");
            return (Criteria) this;
        }

        public Criteria andPercent191NotEqualTo(Integer value) {
            addCriterion("percent191 <>", value, "percent191");
            return (Criteria) this;
        }

        public Criteria andPercent191GreaterThan(Integer value) {
            addCriterion("percent191 >", value, "percent191");
            return (Criteria) this;
        }

        public Criteria andPercent191GreaterThanOrEqualTo(Integer value) {
            addCriterion("percent191 >=", value, "percent191");
            return (Criteria) this;
        }

        public Criteria andPercent191LessThan(Integer value) {
            addCriterion("percent191 <", value, "percent191");
            return (Criteria) this;
        }

        public Criteria andPercent191LessThanOrEqualTo(Integer value) {
            addCriterion("percent191 <=", value, "percent191");
            return (Criteria) this;
        }

        public Criteria andPercent191In(List<Integer> values) {
            addCriterion("percent191 in", values, "percent191");
            return (Criteria) this;
        }

        public Criteria andPercent191NotIn(List<Integer> values) {
            addCriterion("percent191 not in", values, "percent191");
            return (Criteria) this;
        }

        public Criteria andPercent191Between(Integer value1, Integer value2) {
            addCriterion("percent191 between", value1, value2, "percent191");
            return (Criteria) this;
        }

        public Criteria andPercent191NotBetween(Integer value1, Integer value2) {
            addCriterion("percent191 not between", value1, value2, "percent191");
            return (Criteria) this;
        }

        public Criteria andPercent382IsNull() {
            addCriterion("percent382 is null");
            return (Criteria) this;
        }

        public Criteria andPercent382IsNotNull() {
            addCriterion("percent382 is not null");
            return (Criteria) this;
        }

        public Criteria andPercent382EqualTo(Integer value) {
            addCriterion("percent382 =", value, "percent382");
            return (Criteria) this;
        }

        public Criteria andPercent382NotEqualTo(Integer value) {
            addCriterion("percent382 <>", value, "percent382");
            return (Criteria) this;
        }

        public Criteria andPercent382GreaterThan(Integer value) {
            addCriterion("percent382 >", value, "percent382");
            return (Criteria) this;
        }

        public Criteria andPercent382GreaterThanOrEqualTo(Integer value) {
            addCriterion("percent382 >=", value, "percent382");
            return (Criteria) this;
        }

        public Criteria andPercent382LessThan(Integer value) {
            addCriterion("percent382 <", value, "percent382");
            return (Criteria) this;
        }

        public Criteria andPercent382LessThanOrEqualTo(Integer value) {
            addCriterion("percent382 <=", value, "percent382");
            return (Criteria) this;
        }

        public Criteria andPercent382In(List<Integer> values) {
            addCriterion("percent382 in", values, "percent382");
            return (Criteria) this;
        }

        public Criteria andPercent382NotIn(List<Integer> values) {
            addCriterion("percent382 not in", values, "percent382");
            return (Criteria) this;
        }

        public Criteria andPercent382Between(Integer value1, Integer value2) {
            addCriterion("percent382 between", value1, value2, "percent382");
            return (Criteria) this;
        }

        public Criteria andPercent382NotBetween(Integer value1, Integer value2) {
            addCriterion("percent382 not between", value1, value2, "percent382");
            return (Criteria) this;
        }

        public Criteria andPercent500IsNull() {
            addCriterion("percent500 is null");
            return (Criteria) this;
        }

        public Criteria andPercent500IsNotNull() {
            addCriterion("percent500 is not null");
            return (Criteria) this;
        }

        public Criteria andPercent500EqualTo(Integer value) {
            addCriterion("percent500 =", value, "percent500");
            return (Criteria) this;
        }

        public Criteria andPercent500NotEqualTo(Integer value) {
            addCriterion("percent500 <>", value, "percent500");
            return (Criteria) this;
        }

        public Criteria andPercent500GreaterThan(Integer value) {
            addCriterion("percent500 >", value, "percent500");
            return (Criteria) this;
        }

        public Criteria andPercent500GreaterThanOrEqualTo(Integer value) {
            addCriterion("percent500 >=", value, "percent500");
            return (Criteria) this;
        }

        public Criteria andPercent500LessThan(Integer value) {
            addCriterion("percent500 <", value, "percent500");
            return (Criteria) this;
        }

        public Criteria andPercent500LessThanOrEqualTo(Integer value) {
            addCriterion("percent500 <=", value, "percent500");
            return (Criteria) this;
        }

        public Criteria andPercent500In(List<Integer> values) {
            addCriterion("percent500 in", values, "percent500");
            return (Criteria) this;
        }

        public Criteria andPercent500NotIn(List<Integer> values) {
            addCriterion("percent500 not in", values, "percent500");
            return (Criteria) this;
        }

        public Criteria andPercent500Between(Integer value1, Integer value2) {
            addCriterion("percent500 between", value1, value2, "percent500");
            return (Criteria) this;
        }

        public Criteria andPercent500NotBetween(Integer value1, Integer value2) {
            addCriterion("percent500 not between", value1, value2, "percent500");
            return (Criteria) this;
        }

        public Criteria andPercent618IsNull() {
            addCriterion("percent618 is null");
            return (Criteria) this;
        }

        public Criteria andPercent618IsNotNull() {
            addCriterion("percent618 is not null");
            return (Criteria) this;
        }

        public Criteria andPercent618EqualTo(Integer value) {
            addCriterion("percent618 =", value, "percent618");
            return (Criteria) this;
        }

        public Criteria andPercent618NotEqualTo(Integer value) {
            addCriterion("percent618 <>", value, "percent618");
            return (Criteria) this;
        }

        public Criteria andPercent618GreaterThan(Integer value) {
            addCriterion("percent618 >", value, "percent618");
            return (Criteria) this;
        }

        public Criteria andPercent618GreaterThanOrEqualTo(Integer value) {
            addCriterion("percent618 >=", value, "percent618");
            return (Criteria) this;
        }

        public Criteria andPercent618LessThan(Integer value) {
            addCriterion("percent618 <", value, "percent618");
            return (Criteria) this;
        }

        public Criteria andPercent618LessThanOrEqualTo(Integer value) {
            addCriterion("percent618 <=", value, "percent618");
            return (Criteria) this;
        }

        public Criteria andPercent618In(List<Integer> values) {
            addCriterion("percent618 in", values, "percent618");
            return (Criteria) this;
        }

        public Criteria andPercent618NotIn(List<Integer> values) {
            addCriterion("percent618 not in", values, "percent618");
            return (Criteria) this;
        }

        public Criteria andPercent618Between(Integer value1, Integer value2) {
            addCriterion("percent618 between", value1, value2, "percent618");
            return (Criteria) this;
        }

        public Criteria andPercent618NotBetween(Integer value1, Integer value2) {
            addCriterion("percent618 not between", value1, value2, "percent618");
            return (Criteria) this;
        }

        public Criteria andPercent809IsNull() {
            addCriterion("percent809 is null");
            return (Criteria) this;
        }

        public Criteria andPercent809IsNotNull() {
            addCriterion("percent809 is not null");
            return (Criteria) this;
        }

        public Criteria andPercent809EqualTo(Integer value) {
            addCriterion("percent809 =", value, "percent809");
            return (Criteria) this;
        }

        public Criteria andPercent809NotEqualTo(Integer value) {
            addCriterion("percent809 <>", value, "percent809");
            return (Criteria) this;
        }

        public Criteria andPercent809GreaterThan(Integer value) {
            addCriterion("percent809 >", value, "percent809");
            return (Criteria) this;
        }

        public Criteria andPercent809GreaterThanOrEqualTo(Integer value) {
            addCriterion("percent809 >=", value, "percent809");
            return (Criteria) this;
        }

        public Criteria andPercent809LessThan(Integer value) {
            addCriterion("percent809 <", value, "percent809");
            return (Criteria) this;
        }

        public Criteria andPercent809LessThanOrEqualTo(Integer value) {
            addCriterion("percent809 <=", value, "percent809");
            return (Criteria) this;
        }

        public Criteria andPercent809In(List<Integer> values) {
            addCriterion("percent809 in", values, "percent809");
            return (Criteria) this;
        }

        public Criteria andPercent809NotIn(List<Integer> values) {
            addCriterion("percent809 not in", values, "percent809");
            return (Criteria) this;
        }

        public Criteria andPercent809Between(Integer value1, Integer value2) {
            addCriterion("percent809 between", value1, value2, "percent809");
            return (Criteria) this;
        }

        public Criteria andPercent809NotBetween(Integer value1, Integer value2) {
            addCriterion("percent809 not between", value1, value2, "percent809");
            return (Criteria) this;
        }

        public Criteria andExcellentIsNull() {
            addCriterion("excellent is null");
            return (Criteria) this;
        }

        public Criteria andExcellentIsNotNull() {
            addCriterion("excellent is not null");
            return (Criteria) this;
        }

        public Criteria andExcellentEqualTo(Integer value) {
            addCriterion("excellent =", value, "excellent");
            return (Criteria) this;
        }

        public Criteria andExcellentNotEqualTo(Integer value) {
            addCriterion("excellent <>", value, "excellent");
            return (Criteria) this;
        }

        public Criteria andExcellentGreaterThan(Integer value) {
            addCriterion("excellent >", value, "excellent");
            return (Criteria) this;
        }

        public Criteria andExcellentGreaterThanOrEqualTo(Integer value) {
            addCriterion("excellent >=", value, "excellent");
            return (Criteria) this;
        }

        public Criteria andExcellentLessThan(Integer value) {
            addCriterion("excellent <", value, "excellent");
            return (Criteria) this;
        }

        public Criteria andExcellentLessThanOrEqualTo(Integer value) {
            addCriterion("excellent <=", value, "excellent");
            return (Criteria) this;
        }

        public Criteria andExcellentIn(List<Integer> values) {
            addCriterion("excellent in", values, "excellent");
            return (Criteria) this;
        }

        public Criteria andExcellentNotIn(List<Integer> values) {
            addCriterion("excellent not in", values, "excellent");
            return (Criteria) this;
        }

        public Criteria andExcellentBetween(Integer value1, Integer value2) {
            addCriterion("excellent between", value1, value2, "excellent");
            return (Criteria) this;
        }

        public Criteria andExcellentNotBetween(Integer value1, Integer value2) {
            addCriterion("excellent not between", value1, value2, "excellent");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table questioning_vote_summarizing
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table questioning_vote_summarizing
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}