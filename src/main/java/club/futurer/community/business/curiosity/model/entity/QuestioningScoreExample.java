package club.futurer.community.business.curiosity.model.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class QuestioningScoreExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table questioning_score
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table questioning_score
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table questioning_score
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_score
     *
     * @mbg.generated
     */
    public QuestioningScoreExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_score
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_score
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_score
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_score
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_score
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_score
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_score
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_score
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_score
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table questioning_score
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table questioning_score
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andQuestioningIdIsNull() {
            addCriterion("questioning_id is null");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdIsNotNull() {
            addCriterion("questioning_id is not null");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdEqualTo(Long value) {
            addCriterion("questioning_id =", value, "questioningId");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdNotEqualTo(Long value) {
            addCriterion("questioning_id <>", value, "questioningId");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdGreaterThan(Long value) {
            addCriterion("questioning_id >", value, "questioningId");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdGreaterThanOrEqualTo(Long value) {
            addCriterion("questioning_id >=", value, "questioningId");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdLessThan(Long value) {
            addCriterion("questioning_id <", value, "questioningId");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdLessThanOrEqualTo(Long value) {
            addCriterion("questioning_id <=", value, "questioningId");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdIn(List<Long> values) {
            addCriterion("questioning_id in", values, "questioningId");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdNotIn(List<Long> values) {
            addCriterion("questioning_id not in", values, "questioningId");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdBetween(Long value1, Long value2) {
            addCriterion("questioning_id between", value1, value2, "questioningId");
            return (Criteria) this;
        }

        public Criteria andQuestioningIdNotBetween(Long value1, Long value2) {
            addCriterion("questioning_id not between", value1, value2, "questioningId");
            return (Criteria) this;
        }

        public Criteria andHackerNewsScoreIsNull() {
            addCriterion("hacker_news_score is null");
            return (Criteria) this;
        }

        public Criteria andHackerNewsScoreIsNotNull() {
            addCriterion("hacker_news_score is not null");
            return (Criteria) this;
        }

        public Criteria andHackerNewsScoreEqualTo(BigDecimal value) {
            addCriterion("hacker_news_score =", value, "hackerNewsScore");
            return (Criteria) this;
        }

        public Criteria andHackerNewsScoreNotEqualTo(BigDecimal value) {
            addCriterion("hacker_news_score <>", value, "hackerNewsScore");
            return (Criteria) this;
        }

        public Criteria andHackerNewsScoreGreaterThan(BigDecimal value) {
            addCriterion("hacker_news_score >", value, "hackerNewsScore");
            return (Criteria) this;
        }

        public Criteria andHackerNewsScoreGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("hacker_news_score >=", value, "hackerNewsScore");
            return (Criteria) this;
        }

        public Criteria andHackerNewsScoreLessThan(BigDecimal value) {
            addCriterion("hacker_news_score <", value, "hackerNewsScore");
            return (Criteria) this;
        }

        public Criteria andHackerNewsScoreLessThanOrEqualTo(BigDecimal value) {
            addCriterion("hacker_news_score <=", value, "hackerNewsScore");
            return (Criteria) this;
        }

        public Criteria andHackerNewsScoreIn(List<BigDecimal> values) {
            addCriterion("hacker_news_score in", values, "hackerNewsScore");
            return (Criteria) this;
        }

        public Criteria andHackerNewsScoreNotIn(List<BigDecimal> values) {
            addCriterion("hacker_news_score not in", values, "hackerNewsScore");
            return (Criteria) this;
        }

        public Criteria andHackerNewsScoreBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("hacker_news_score between", value1, value2, "hackerNewsScore");
            return (Criteria) this;
        }

        public Criteria andHackerNewsScoreNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("hacker_news_score not between", value1, value2, "hackerNewsScore");
            return (Criteria) this;
        }

        public Criteria andRedditScoreIsNull() {
            addCriterion("reddit_score is null");
            return (Criteria) this;
        }

        public Criteria andRedditScoreIsNotNull() {
            addCriterion("reddit_score is not null");
            return (Criteria) this;
        }

        public Criteria andRedditScoreEqualTo(BigDecimal value) {
            addCriterion("reddit_score =", value, "redditScore");
            return (Criteria) this;
        }

        public Criteria andRedditScoreNotEqualTo(BigDecimal value) {
            addCriterion("reddit_score <>", value, "redditScore");
            return (Criteria) this;
        }

        public Criteria andRedditScoreGreaterThan(BigDecimal value) {
            addCriterion("reddit_score >", value, "redditScore");
            return (Criteria) this;
        }

        public Criteria andRedditScoreGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("reddit_score >=", value, "redditScore");
            return (Criteria) this;
        }

        public Criteria andRedditScoreLessThan(BigDecimal value) {
            addCriterion("reddit_score <", value, "redditScore");
            return (Criteria) this;
        }

        public Criteria andRedditScoreLessThanOrEqualTo(BigDecimal value) {
            addCriterion("reddit_score <=", value, "redditScore");
            return (Criteria) this;
        }

        public Criteria andRedditScoreIn(List<BigDecimal> values) {
            addCriterion("reddit_score in", values, "redditScore");
            return (Criteria) this;
        }

        public Criteria andRedditScoreNotIn(List<BigDecimal> values) {
            addCriterion("reddit_score not in", values, "redditScore");
            return (Criteria) this;
        }

        public Criteria andRedditScoreBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("reddit_score between", value1, value2, "redditScore");
            return (Criteria) this;
        }

        public Criteria andRedditScoreNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("reddit_score not between", value1, value2, "redditScore");
            return (Criteria) this;
        }

        public Criteria andStackoverflowScoreIsNull() {
            addCriterion("stackoverflow_score is null");
            return (Criteria) this;
        }

        public Criteria andStackoverflowScoreIsNotNull() {
            addCriterion("stackoverflow_score is not null");
            return (Criteria) this;
        }

        public Criteria andStackoverflowScoreEqualTo(BigDecimal value) {
            addCriterion("stackoverflow_score =", value, "stackoverflowScore");
            return (Criteria) this;
        }

        public Criteria andStackoverflowScoreNotEqualTo(BigDecimal value) {
            addCriterion("stackoverflow_score <>", value, "stackoverflowScore");
            return (Criteria) this;
        }

        public Criteria andStackoverflowScoreGreaterThan(BigDecimal value) {
            addCriterion("stackoverflow_score >", value, "stackoverflowScore");
            return (Criteria) this;
        }

        public Criteria andStackoverflowScoreGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("stackoverflow_score >=", value, "stackoverflowScore");
            return (Criteria) this;
        }

        public Criteria andStackoverflowScoreLessThan(BigDecimal value) {
            addCriterion("stackoverflow_score <", value, "stackoverflowScore");
            return (Criteria) this;
        }

        public Criteria andStackoverflowScoreLessThanOrEqualTo(BigDecimal value) {
            addCriterion("stackoverflow_score <=", value, "stackoverflowScore");
            return (Criteria) this;
        }

        public Criteria andStackoverflowScoreIn(List<BigDecimal> values) {
            addCriterion("stackoverflow_score in", values, "stackoverflowScore");
            return (Criteria) this;
        }

        public Criteria andStackoverflowScoreNotIn(List<BigDecimal> values) {
            addCriterion("stackoverflow_score not in", values, "stackoverflowScore");
            return (Criteria) this;
        }

        public Criteria andStackoverflowScoreBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("stackoverflow_score between", value1, value2, "stackoverflowScore");
            return (Criteria) this;
        }

        public Criteria andStackoverflowScoreNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("stackoverflow_score not between", value1, value2, "stackoverflowScore");
            return (Criteria) this;
        }

        public Criteria andNewtonCoolingScoreIsNull() {
            addCriterion("newton_cooling_score is null");
            return (Criteria) this;
        }

        public Criteria andNewtonCoolingScoreIsNotNull() {
            addCriterion("newton_cooling_score is not null");
            return (Criteria) this;
        }

        public Criteria andNewtonCoolingScoreEqualTo(BigDecimal value) {
            addCriterion("newton_cooling_score =", value, "newtonCoolingScore");
            return (Criteria) this;
        }

        public Criteria andNewtonCoolingScoreNotEqualTo(BigDecimal value) {
            addCriterion("newton_cooling_score <>", value, "newtonCoolingScore");
            return (Criteria) this;
        }

        public Criteria andNewtonCoolingScoreGreaterThan(BigDecimal value) {
            addCriterion("newton_cooling_score >", value, "newtonCoolingScore");
            return (Criteria) this;
        }

        public Criteria andNewtonCoolingScoreGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("newton_cooling_score >=", value, "newtonCoolingScore");
            return (Criteria) this;
        }

        public Criteria andNewtonCoolingScoreLessThan(BigDecimal value) {
            addCriterion("newton_cooling_score <", value, "newtonCoolingScore");
            return (Criteria) this;
        }

        public Criteria andNewtonCoolingScoreLessThanOrEqualTo(BigDecimal value) {
            addCriterion("newton_cooling_score <=", value, "newtonCoolingScore");
            return (Criteria) this;
        }

        public Criteria andNewtonCoolingScoreIn(List<BigDecimal> values) {
            addCriterion("newton_cooling_score in", values, "newtonCoolingScore");
            return (Criteria) this;
        }

        public Criteria andNewtonCoolingScoreNotIn(List<BigDecimal> values) {
            addCriterion("newton_cooling_score not in", values, "newtonCoolingScore");
            return (Criteria) this;
        }

        public Criteria andNewtonCoolingScoreBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("newton_cooling_score between", value1, value2, "newtonCoolingScore");
            return (Criteria) this;
        }

        public Criteria andNewtonCoolingScoreNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("newton_cooling_score not between", value1, value2, "newtonCoolingScore");
            return (Criteria) this;
        }

        public Criteria andWilsonScoreIsNull() {
            addCriterion("wilson_score is null");
            return (Criteria) this;
        }

        public Criteria andWilsonScoreIsNotNull() {
            addCriterion("wilson_score is not null");
            return (Criteria) this;
        }

        public Criteria andWilsonScoreEqualTo(BigDecimal value) {
            addCriterion("wilson_score =", value, "wilsonScore");
            return (Criteria) this;
        }

        public Criteria andWilsonScoreNotEqualTo(BigDecimal value) {
            addCriterion("wilson_score <>", value, "wilsonScore");
            return (Criteria) this;
        }

        public Criteria andWilsonScoreGreaterThan(BigDecimal value) {
            addCriterion("wilson_score >", value, "wilsonScore");
            return (Criteria) this;
        }

        public Criteria andWilsonScoreGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("wilson_score >=", value, "wilsonScore");
            return (Criteria) this;
        }

        public Criteria andWilsonScoreLessThan(BigDecimal value) {
            addCriterion("wilson_score <", value, "wilsonScore");
            return (Criteria) this;
        }

        public Criteria andWilsonScoreLessThanOrEqualTo(BigDecimal value) {
            addCriterion("wilson_score <=", value, "wilsonScore");
            return (Criteria) this;
        }

        public Criteria andWilsonScoreIn(List<BigDecimal> values) {
            addCriterion("wilson_score in", values, "wilsonScore");
            return (Criteria) this;
        }

        public Criteria andWilsonScoreNotIn(List<BigDecimal> values) {
            addCriterion("wilson_score not in", values, "wilsonScore");
            return (Criteria) this;
        }

        public Criteria andWilsonScoreBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("wilson_score between", value1, value2, "wilsonScore");
            return (Criteria) this;
        }

        public Criteria andWilsonScoreNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("wilson_score not between", value1, value2, "wilsonScore");
            return (Criteria) this;
        }

        public Criteria andBayesianAverageScoreIsNull() {
            addCriterion("bayesian_average_score is null");
            return (Criteria) this;
        }

        public Criteria andBayesianAverageScoreIsNotNull() {
            addCriterion("bayesian_average_score is not null");
            return (Criteria) this;
        }

        public Criteria andBayesianAverageScoreEqualTo(BigDecimal value) {
            addCriterion("bayesian_average_score =", value, "bayesianAverageScore");
            return (Criteria) this;
        }

        public Criteria andBayesianAverageScoreNotEqualTo(BigDecimal value) {
            addCriterion("bayesian_average_score <>", value, "bayesianAverageScore");
            return (Criteria) this;
        }

        public Criteria andBayesianAverageScoreGreaterThan(BigDecimal value) {
            addCriterion("bayesian_average_score >", value, "bayesianAverageScore");
            return (Criteria) this;
        }

        public Criteria andBayesianAverageScoreGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("bayesian_average_score >=", value, "bayesianAverageScore");
            return (Criteria) this;
        }

        public Criteria andBayesianAverageScoreLessThan(BigDecimal value) {
            addCriterion("bayesian_average_score <", value, "bayesianAverageScore");
            return (Criteria) this;
        }

        public Criteria andBayesianAverageScoreLessThanOrEqualTo(BigDecimal value) {
            addCriterion("bayesian_average_score <=", value, "bayesianAverageScore");
            return (Criteria) this;
        }

        public Criteria andBayesianAverageScoreIn(List<BigDecimal> values) {
            addCriterion("bayesian_average_score in", values, "bayesianAverageScore");
            return (Criteria) this;
        }

        public Criteria andBayesianAverageScoreNotIn(List<BigDecimal> values) {
            addCriterion("bayesian_average_score not in", values, "bayesianAverageScore");
            return (Criteria) this;
        }

        public Criteria andBayesianAverageScoreBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("bayesian_average_score between", value1, value2, "bayesianAverageScore");
            return (Criteria) this;
        }

        public Criteria andBayesianAverageScoreNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("bayesian_average_score not between", value1, value2, "bayesianAverageScore");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table questioning_score
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table questioning_score
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}