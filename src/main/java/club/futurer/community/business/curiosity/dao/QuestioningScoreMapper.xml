<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="club.futurer.community.business.curiosity.dao.QuestioningScoreMapper">
  <resultMap id="BaseResultMap" type="club.futurer.community.business.curiosity.model.entity.QuestioningScore">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="questioning_id" jdbcType="BIGINT" property="questioningId" />
    <result column="hacker_news_score" jdbcType="NUMERIC" property="hackerNewsScore" />
    <result column="reddit_score" jdbcType="NUMERIC" property="redditScore" />
    <result column="stackoverflow_score" jdbcType="NUMERIC" property="stackoverflowScore" />
    <result column="newton_cooling_score" jdbcType="NUMERIC" property="newtonCoolingScore" />
    <result column="wilson_score" jdbcType="NUMERIC" property="wilsonScore" />
    <result column="bayesian_average_score" jdbcType="NUMERIC" property="bayesianAverageScore" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    questioning_id, hacker_news_score, reddit_score, stackoverflow_score, newton_cooling_score, 
    wilson_score, bayesian_average_score
  </sql>
  <select id="selectByExample" parameterType="club.futurer.community.business.curiosity.model.entity.QuestioningScoreExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from questioning_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from questioning_score
    where questioning_id = #{questioningId,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="club.futurer.community.business.curiosity.model.entity.QuestioningScore">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into questioning_score (questioning_id, hacker_news_score, reddit_score, 
      stackoverflow_score, newton_cooling_score, 
      wilson_score, bayesian_average_score)
    values (#{questioningId,jdbcType=BIGINT}, #{hackerNewsScore,jdbcType=NUMERIC}, #{redditScore,jdbcType=NUMERIC}, 
      #{stackoverflowScore,jdbcType=NUMERIC}, #{newtonCoolingScore,jdbcType=NUMERIC}, 
      #{wilsonScore,jdbcType=NUMERIC}, #{bayesianAverageScore,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" parameterType="club.futurer.community.business.curiosity.model.entity.QuestioningScore">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into questioning_score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="questioningId != null">
        questioning_id,
      </if>
      <if test="hackerNewsScore != null">
        hacker_news_score,
      </if>
      <if test="redditScore != null">
        reddit_score,
      </if>
      <if test="stackoverflowScore != null">
        stackoverflow_score,
      </if>
      <if test="newtonCoolingScore != null">
        newton_cooling_score,
      </if>
      <if test="wilsonScore != null">
        wilson_score,
      </if>
      <if test="bayesianAverageScore != null">
        bayesian_average_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="questioningId != null">
        #{questioningId,jdbcType=BIGINT},
      </if>
      <if test="hackerNewsScore != null">
        #{hackerNewsScore,jdbcType=NUMERIC},
      </if>
      <if test="redditScore != null">
        #{redditScore,jdbcType=NUMERIC},
      </if>
      <if test="stackoverflowScore != null">
        #{stackoverflowScore,jdbcType=NUMERIC},
      </if>
      <if test="newtonCoolingScore != null">
        #{newtonCoolingScore,jdbcType=NUMERIC},
      </if>
      <if test="wilsonScore != null">
        #{wilsonScore,jdbcType=NUMERIC},
      </if>
      <if test="bayesianAverageScore != null">
        #{bayesianAverageScore,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="club.futurer.community.business.curiosity.model.entity.QuestioningScoreExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from questioning_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update questioning_score
    <set>
      <if test="record.questioningId != null">
        questioning_id = #{record.questioningId,jdbcType=BIGINT},
      </if>
      <if test="record.hackerNewsScore != null">
        hacker_news_score = #{record.hackerNewsScore,jdbcType=NUMERIC},
      </if>
      <if test="record.redditScore != null">
        reddit_score = #{record.redditScore,jdbcType=NUMERIC},
      </if>
      <if test="record.stackoverflowScore != null">
        stackoverflow_score = #{record.stackoverflowScore,jdbcType=NUMERIC},
      </if>
      <if test="record.newtonCoolingScore != null">
        newton_cooling_score = #{record.newtonCoolingScore,jdbcType=NUMERIC},
      </if>
      <if test="record.wilsonScore != null">
        wilson_score = #{record.wilsonScore,jdbcType=NUMERIC},
      </if>
      <if test="record.bayesianAverageScore != null">
        bayesian_average_score = #{record.bayesianAverageScore,jdbcType=NUMERIC},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update questioning_score
    set questioning_id = #{record.questioningId,jdbcType=BIGINT},
      hacker_news_score = #{record.hackerNewsScore,jdbcType=NUMERIC},
      reddit_score = #{record.redditScore,jdbcType=NUMERIC},
      stackoverflow_score = #{record.stackoverflowScore,jdbcType=NUMERIC},
      newton_cooling_score = #{record.newtonCoolingScore,jdbcType=NUMERIC},
      wilson_score = #{record.wilsonScore,jdbcType=NUMERIC},
      bayesian_average_score = #{record.bayesianAverageScore,jdbcType=NUMERIC}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="club.futurer.community.business.curiosity.model.entity.QuestioningScore">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update questioning_score
    <set>
      <if test="hackerNewsScore != null">
        hacker_news_score = #{hackerNewsScore,jdbcType=NUMERIC},
      </if>
      <if test="redditScore != null">
        reddit_score = #{redditScore,jdbcType=NUMERIC},
      </if>
      <if test="stackoverflowScore != null">
        stackoverflow_score = #{stackoverflowScore,jdbcType=NUMERIC},
      </if>
      <if test="newtonCoolingScore != null">
        newton_cooling_score = #{newtonCoolingScore,jdbcType=NUMERIC},
      </if>
      <if test="wilsonScore != null">
        wilson_score = #{wilsonScore,jdbcType=NUMERIC},
      </if>
      <if test="bayesianAverageScore != null">
        bayesian_average_score = #{bayesianAverageScore,jdbcType=NUMERIC},
      </if>
    </set>
    where questioning_id = #{questioningId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="club.futurer.community.business.curiosity.model.entity.QuestioningScore">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update questioning_score
    set hacker_news_score = #{hackerNewsScore,jdbcType=NUMERIC},
      reddit_score = #{redditScore,jdbcType=NUMERIC},
      stackoverflow_score = #{stackoverflowScore,jdbcType=NUMERIC},
      newton_cooling_score = #{newtonCoolingScore,jdbcType=NUMERIC},
      wilson_score = #{wilsonScore,jdbcType=NUMERIC},
      bayesian_average_score = #{bayesianAverageScore,jdbcType=NUMERIC}
    where questioning_id = #{questioningId,jdbcType=BIGINT}
  </update>
</mapper>